name: php

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

  workflow_dispatch:

concurrency:
  group: php ${{ github.ref }}
  cancel-in-progress: true

env:
  package-name: devcontainers/php
  registry: ghcr.io

jobs:
  docker-run:
    runs-on: ubuntu-latest
    name: Php build

    strategy:
      fail-fast: false
      matrix:
        php-version: [8, 8.1, 8.2, 8.3]
  
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.registry }}/${{ github.repository_owner }}/${{ env.package-name }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=auto
            suffix=${{ matrix.php-version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build docker
      - name: Docker build
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true # ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.registry }}/${{ github.repository_owner }}/${{ env.package-name }}:main
          labels: ${{ steps.docker_meta.outputs.labels }}
          file: php/Dockerfile
          context: php
          platforms: 'linux/amd64'
          build-args: VARIANT=${{ matrix.php-version }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

    #   - name: Prune images
    #     uses: vlaurin/action-ghcr-prune@v0.5.0
    #     if: github.event_name != 'pull_request'
    #     with:
    #       token: ${{ secrets.GITHUB_TOKEN }}
    #       organization: ${{ github.repository_owner }}
    #       container: ${{ env.package-name }}
    #       keep-younger-than: 15
    #       prune-untagged: true
